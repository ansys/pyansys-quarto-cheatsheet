on:
  pull_request:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.11'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


name: CI

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - name: "Run code style checks"
        uses: ansys/actions/code-style@v5.1
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false

  create-archives:
    runs-on: ubuntu-latest
    needs: code-style
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install zip gzip tar -y

      - name: Create archive
        run: |
          zip -r cheat_sheet.zip _extensions
          tar -czvf cheat_sheet.tar.gz _extensions

      - name: List files
        run: |
          ls -l

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          path: |
            cheat_sheet.zip
            cheat_sheet.tar.gz

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          tinytex: true

      - name: Check Quarto version
        run: |
          quarto --version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          quarto add cheat_sheet.tar.gz --no-prompt
          python3 -m pip install jupyter

      - name: Render book
        run: |
          quarto render examples/cheat_sheet.qmd --to cheat_sheet-pdf

      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_build

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: create-archives
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Relase to github
        uses: softprops/action-gh-release@v2
        with:
          files: |
            cheat_sheet.zip
            cheat_sheet.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
