on:
  pull_request:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


name: CI

jobs:

  code-style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python3 -m pip install pre-commit
          pre-commit install

      - name: Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

  create_archives:
    runs-on: ubuntu-latest
    needs: build-deploy
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install zip gzip tar -y

      - name: Create archive
        run: |
          zip -r cheatsheet_zip.zip _extensions
          tar -czvf cheatsheet_tar.tar.gz _extensions

      - name: List files
        run: |
          ls -l

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            cheatsheet_zip.zip
            cheatsheet_tar.tar.gz


  build-deploy:
    runs-on: ubuntu-latest
    needs: code-style
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          tinytex: true

      - name: Check Quarto version
        run: |
          quarto --version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          quarto install extension . --no-prompt
          python3 -m pip install jupyter

      - name: Render book
        run: |
          quarto render cheatsheet.qmd --to cheatsheet-pdf

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_build

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: create_archives
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Relase to github
        uses: softprops/action-gh-release@v1
        with:
          files: |
            cheatsheet_zip.zip
            cheatsheet_tar.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
